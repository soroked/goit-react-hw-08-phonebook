{"version":3,"file":"static/js/637.ca51c9e6.chunk.js","mappings":"iOAiEA,UA3DkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,UACXC,GAAcD,EAAAA,EAAAA,UAGdE,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAO,CAAEC,MAAO,QAASC,WAAY,OAAQC,YAAa,QAASN,UACvEF,EAAAA,EAAAA,MAACI,EAAAA,EAAAA,KAAS,CAAAF,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,mBAAkBP,SAAC,YAEjCF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,SAjBO,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAW,CACfC,MAAOpB,EAASqB,QAAQC,MACxBC,SAAUrB,EAAYmB,QAAQC,OAGhCnB,GAASqB,EAAAA,EAAAA,IAAWL,GACtB,EAQqCZ,SAAA,EAC3BF,EAAAA,EAAAA,MAACU,EAAAA,EAAAA,MAAU,CAACU,GAAG,QAAOlB,SAAA,EACpBC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,MAAU,CAAAR,SAAC,WACZC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,QAAY,CACXW,KAAK,QACLC,IAAK3B,EACL4B,aAAa,KACbC,UAAQ,QAIZxB,EAAAA,EAAAA,MAACU,EAAAA,EAAAA,MAAU,CAACU,GAAG,WAAUlB,SAAA,EACvBC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,MAAU,CAAAR,SAAC,cACZC,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,QAAY,CACXW,KAAK,WACLC,IAAKzB,EACL0B,aAAa,KACbE,UAAW,EACXD,UAAQ,QAIZrB,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,CAAuBjB,UAAU,aAAaY,KAAK,SAAQnB,SAAC,oBAM1EF,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yBAAwBP,SAAA,CAAC,qBACrBC,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAG,YAAW1B,SAAC,iBAI9C,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginThunk } from 'redux/auth/auth.reducer';\n\nconst LoginPage = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  // const [error, setError] = useState('');\n  // const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const formData = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    };\n\n    dispatch(loginThunk(formData));\n  };\n\n  return (\n    <>\n      <Card style={{ width: '18rem', marginLeft: 'auto', marginRight: 'auto' }}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {/* {error && <Alert variant=\"danger\">{error}</Alert>} */}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                autoComplete=\"on\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                autoComplete=\"on\"\n                minLength={7}\n                required\n              />\n            </Form.Group>\n\n            <Button /*disabled={loading}*/ className=\"w-100 mt-4\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/register\">Sign Up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["emailRef","useRef","passwordRef","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Card","style","width","marginLeft","marginRight","className","Form","onSubmit","e","preventDefault","formData","email","current","value","password","loginThunk","id","type","ref","autoComplete","required","minLength","Button","Link","to"],"sourceRoot":""}